[GLOBAL]
backend_packages = [
    "pants.backend.python",
    "pants.backend.python.lint.black",
    "pants.backend.python.mixed_interpreter_constraints",
    "pants.backend.python.typecheck.mypy",
]
pants_version = "2.19.0"
# remote_cache_read = true
# remote_cache_write = true
# remote_instance_name = "main"
# remote_store_address = "grpc://44.204.50.6:9092"

[black]
config = "./pyproject.toml"

[python]
interpreter_constraints = ["==3.10.*"]
enable_resolves = true
default_resolve = "default"

[python.resolves]
default = "3rdparty/python/default.lock"
legacy = "3rdparty/python/legacy.lock"
callbacks-arize-phoenix = "3rdparty/python/callbacks-arize-phoenix.lock"
packs-arize-phoenix-query-engine = "3rdparty/python/packs-arize-phoenix-query-engine.lock"
readers-papers = "3rdparty/python/readers-papers.lock"
readers-semanticscholar = "3rdparty/python/readers-semanticscholar.lock"
readers-docugami = "3rdparty/python/readers-docugami.lock"
readers-hatena-blog = "3rdparty/python/readers-hatena-blog.lock"
packs-recursive-retriever = "3rdparty/python/packs-recursive-retriever.lock"
embeddings-gradient = "3rdparty/python/embeddings-gradient.lock"
llms-gradient = "3rdparty/python/llms-gradient.lock"
tools-arxiv = "3rdparty/python/tools-arxiv.lock"
readers-web = "3rdparty/python/readers-web.lock"
readers-imdb-review = "3rdparty/python/readers-imdb-review.lock"
vector-stores-zep = "3rdparty/python/vector-stores-zep.lock"
readers-zep = "3rdparty/python/readers-zep.lock"
callbacks-argilla = "3rdparty/python/callbacks-argilla.lock"
readers-whatsapp = "3rdparty/python/readers-whatsapp.lock"
readers-stripe-docs = "3rdparty/python/readers-stripe-docs.lock"
readers-asana = "3rdparty/python/readers-asana.lock"

[python-infer]
ambiguity_resolution = "by_source_root"

[source]
marker_filenames = ["pyproject.toml"]
root_patterns = ["*tests", "/"]
